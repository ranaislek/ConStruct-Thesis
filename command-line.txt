the tiny sanity-check run: -> successful
python3 main.py +experiment=debug.yaml dataset.name=qm9


If it finishes (it should), launch the full QM9 training: -> ?
python3 main.py \
    dataset.name=qm9 \
    dataset.datadir=data/qm9 \
    dataset.remove_h=true \
    model.rev_proj=planar \
    model.transition=absorbing_edges \
    train.n_epochs=300 \
    train.batch_size=128


Silencing stdout/stderr to a file:
Option A â€“ Unix redirect (quick-n-dirty):

mkdir -p logs

python3 main.py +experiment=debug.yaml dataset.name=qm9 \
  > logs/qm9_debug_$(date +%Y-%m-%d_%H-%M-%S).log 2>&1

# minimal real run (no fast-dev)
python3 main.py \
    dataset.name=qm9 \
    dataset.datadir=data/qm9 \
    dataset.remove_h=true \
    model.rev_proj=planar \
    model.transition=absorbing_edges \
    train.n_epochs=5 \
    train.batch_size=64 \
    general.name=test_qm9_5ep \
    > logs/qm9_test5ep_$(date +%Y-%m-%d_%H-%M-%S).log 2>&1


click run -> start debugging -> put below argument snippet in the "Additional arguments" field while the cursor is in the main.py (since you're debugging starting from there):
  dataset.name=qm9 dataset.datadir=data/qm9 dataset.remove_h=true model.rev_proj=planar model.transition=absorbing_edges train.n_epochs=5 train.batch_size=64 general.name=test_qm9_5ep 

even smaller just to see if it works:
python main.py \
  dataset.name=qm9 \
  dataset.datadir=data/qm9 \
  dataset.remove_h=true \
  +dataset.subset=10 \
  model.rev_proj=planar \
  model.transition=absorbing_edges \
  train.n_epochs=1 \
  train.batch_size=1 \
  general.name=debug_qm9
  > logs/qm9_test5ep_$(date +%Y-%m-%d_%H-%M-%S).log 2>&1

arguments:
 dataset.name=qm9 dataset.datadir=data/qm9 dataset.remove_h=true +dataset.subset=10 model.rev_proj=planar model.transition=absorbing_edges train.n_epochs=1 train.batch_size=1 general.name=debug_qm9

 dataset.name=qm9 dataset.datadir=data/qm9 dataset.remove_h=true model.rev_proj=planar model.transition=absorbing_edges train.n_epochs=1 train.batch_size=1 general.name=debug_qm9

 to try with cpu with minimal dataset:

 python3 main.py \
  dataset.name=qm9 \
  dataset.datadir=data/qm9 \
  dataset.remove_h=true \
  +dataset.subset=10 \
  model.rev_proj=planar \
  model.transition=absorbing_edges \
  train.n_epochs=1 \
  train.batch_size=1 \
  general.name=debug_qm9 \
  > logs/qm9_test5ep_$(date +%Y-%m-%d_%H-%M-%S).log 2>&1



  python main.py +experiment=planar.yaml dataset.name=qm9 +dataset.subset=10 train.n_epochs=5 \
  > logs/qm9_test5ep_$(date +%Y-%m-%d_%H-%M-%S).log 2>&1


  AFTER CURSOR!!! REVOLUTIONARY!!!
  python3 main.py +experiment=qm9 2>&1 | tee logs/output_$(date +%Y%m%d_%H%M%S).log

  example command-line don't know if true:
  #!/bin/bash
#SBATCH --job-name=qm9_ring_count
#SBATCH --output=logs/qm9_ring_count_%j.out
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=4
#SBATCH --mem=28G
#SBATCH --gres=gpu:1
#SBATCH --constraint=A6000|A5000
#SBATCH --time=48:00:00
#SBATCH --partition=allgroups,testing

# Load modules and activate conda environment
source activate construct-env

# Create logs directory if it doesn't exist
mkdir -p logs

# Run ConStruct with scaled-up parameters
python ConStruct/main.py \
  --config configs/experiment/qm9.yaml \
  --config configs/general/general_default.yaml \
  model.rev_proj=ring_count \
  model.max_rings=0 \
  model.diffusion_steps=500 \
  general.number_chain_steps=200 \
  general.samples_to_generate=1000 \
  general.samples_to_save=50 \
  general.chains_to_save=10 \
  general.final_model_samples_to_generate=200 \
  general.final_model_samples_to_save=50 \
  general.final_model_chains_to_save=20 \
  train.batch_size=64 \
  train.n_epochs=1000

  to run:    sbatch ConStruct/qm9_ring_count_check.slurm

  ###### HOW TO DEBUG LOCALLY: !!!!! ###########

  DONT FORGET TO PUT TOGGLE POINT FIRST:
  def main(cfg: DictConfig):
    pl.seed_everything(cfg.train.seed) -----> put toggle point here
  
  ---------------------------------------------------------------------------
  
    click run -> start debugging -> put below argument snippet in the "Additional arguments" field while the cursor is in the main.py (since you're debugging starting from there):
  arguments: --> didnt work
  +experiment=qm9 model.rev_proj=ring_count model.max_rings=0 model.diffusion_steps=2 general.number_chain_steps=1 train.n_epochs=1 train.batch_size=8 general.samples_to_generate=8

  paste in launch.json and click Run with debugging:
  "args": [
    "+experiment=qm9",
    "model.rev_proj=ring_count",
    "model.max_rings=0",
    "model.diffusion_steps=2",
    "general.number_chain_steps=1",
    "train.n_epochs=1",
    "train.batch_size=8",
    "general.samples_to_generate=8"
  ],
